{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverse","setReverse","goods","preparedGoods","sort","good1","good2","localeCompare","length","Error","getPreparedGoods","className","type","onClick","prev","join","map","good","ReactDOM","render","document","getElementById"],"mappings":"4OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EA7BR,SAA0BA,EAA1B,GAA0D,IAAvBJ,EAAsB,EAAtBA,UAAWE,EAAW,EAAXA,QACtCG,EAAa,YAAOD,GAqB1B,OAnBIJ,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAE9B,QACE,MAAM,IAAIC,MAAM,6BAKpBT,GACFG,EAAcH,UAGTG,EAOOO,CAAiBjB,EAAiB,CAAEK,YAAWE,YAe7D,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBb,IAAcJ,GAAuB,YAClEmB,QAnBkB,WACxBd,EAAaL,IAeT,iCAQA,wBACEkB,KAAK,SACLD,UAAS,4BAAuBb,IAAcH,GAAqB,YACnEkB,QAvBgB,WACtBd,EAAaJ,IAmBT,4BAQA,wBACEiB,KAAK,SACLD,UAAS,6BAAwBX,GAAW,YAC5Ca,QAAS,kBAAMZ,GAAW,SAAAa,GAAI,OAAKA,MAHrC,qBAQCZ,EAAMa,KAAN,4BAAiBtB,EAAgBsB,KAAjC,2BAEG,wBACEH,KAAK,SACLD,UAAU,4BACVE,QArCE,WACZZ,GAAW,GACXF,EAAa,KAgCL,sBAWN,6BACGG,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCxGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9528c6c2.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, reverse }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          throw new Error('Sorting went wrong...');\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const goods = getPreparedGoods(goodsFromServer, { sortField, reverse });\n\n  const sortFieldAlphabet = () => {\n    setSortField(SORT_FIELD_ALPHABET);\n  };\n\n  const sortFieldLength = () => {\n    setSortField(SORT_FIELD_LENGTH);\n  };\n\n  const reset = () => {\n    setReverse(false);\n    setSortField('');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortField !== SORT_FIELD_ALPHABET && 'is-light'}`}\n          onClick={sortFieldAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortField !== SORT_FIELD_LENGTH && 'is-light'}`}\n          onClick={sortFieldLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!reverse && 'is-light'}`}\n          onClick={() => setReverse(prev => !prev)}\n        >\n          Reverse\n        </button>\n\n        {goods.join`` !== goodsFromServer.join``\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}